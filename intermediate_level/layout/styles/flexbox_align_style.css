img {
  width: 50rem;
}
.container1,
.container2,
.container3,
.container4,
.container5,
.container6,
.container7,
.container8 {
  border: 3px solid lightgray;
  margin-bottom: 15px;
}

.box {
  width: 5rem;
  height: 5rem;
  background: gold;
  margin: 1rem;
}

/* 
  To display the containers horizontally we use the display property with 'flex' 
  value in it. 
  To align items there are two properies that we need to remember 'justify-content'
  (align along the main axis) and 'align-items' (align along the cross axis).
*/
.container2 {
  display: flex;
}

/*
  We can control the direction y using 'flex-direction' property default vaule 
  is 'row' thats why our boxes are laid in a row.
*/
.container3 {
  display: flex;
  flex-direction: column-reverse;
}

/*
  Alignin elements.
  Even though we set the display property to flex here, this container still a block-level
  element, so by default, its get tall enought to fits its children. So on the ourside this
  element is a block-level element, but on the inside it bhaves according to the flexbox rules.
  So to align items vertically we need to give the container a height.

  Another thing we can do is to change the alignment of only one item, for that we use the 
  'align-self' property. This property is applied on a flex item and not a flex container.
*/
.container4 {
  display: flex;
  justify-content: center;
  align-items: flex-end;
  height: 15rem;
}

.box1_cont4 {
  align-self: flex-start;
}

.container5 {
  display: flex;
  justify-content: space-around;
  align-items: flex-start;
  height: 15rem;
}

/*
  The property 'align-content'
  For default the content inside a container gets smaller in order to fit in one line
*/
.container6 {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 15rem;
}

/* 
  We can change this behaviour with the 'flex-wrap' propery, the default value is 'nowrap'
  thats why the items fit on one line.
  Here we can see that the first line of elements is closer to begining of the vertical axis,
  and the second is closer to the end, here is where the property 'align-content' comes in handy
  with this property we can align multiple lines or the entire content as a whole.
*/
.container7 {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 25rem;
  flex-wrap: wrap;
}

.container7 {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 25rem;
  flex-wrap: wrap;
}

.container8 {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 25rem;
  flex-wrap: wrap;
  align-content: center;
}
