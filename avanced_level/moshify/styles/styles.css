/* Variables */
:root {
  --primary_color: #2584ff;
  --secondary_color: #00d9ff;
  --accent_color: #ff3400;
  --heading_color: #1b0760;
  --text_color: #918ca4;
}

/* Typography */

html {
  /* 
    Here we use 62.5% because the default size of web pages is 16px, if we give it 
    62.5% * 16px = 10px, its easyer for us to set the font size of each element,
    knowing that the size of the parent element is 10px.
  */
  font-size: 62.5%;
}

body {
  font-family: "Inter", sans-serif;
  color: var(--text_color);
  font-size: 2.4rem;
  line-height: 1.7;
}

h1,
h2,
h3 {
  color: var(--heading_color);
  margin-bottom: 1rem;
}

h1 {
  font-size: 7rem;
}

h2 {
  font-size: 4rem;
}

h3 {
  font-size: 3rem;
}

p {
  margin-top: 0;
}

@media screen and (min-width: 1024px) {
  body {
    font-size: 1.8rem;
  }

  h1 {
    font-size: 8rem;
  }

  h2 {
    font-size: 4rem;
  }

  h3 {
    font-size: 2.4rem;
  }
}

/* Links */

a {
  text-decoration: none;
}

.link_arrow {
  color: var(--accent_color);
  text-transform: uppercase;
  font-size: 2rem;
  font-weight: bold;
}

/* Adding the arrow at the end of the anchor element */
.link_arrow::after {
  content: "-->";
  margin-left: 5px;
  transition: margin-left 0.25s;
}

/* Appling a effect when the link is hovered, im going to target the arrow */
.link_arrow:hover::after {
  margin-left: 10px;
}

@media screen and (min-width: 1024px) {
  .link_arrow {
    font-size: 1.5rem;
  }
}

/* Badges */

.badge {
  border-radius: 2.4rem;
  color: white;
  display: inline;
  font-size: 2rem;
  font-weight: 600;
  padding: 1rem 1.5rem;
  white-space: nowrap;
}

/* Using BEM naming convention to separate the block element from the modifier */
.badge--primary {
  background: var(--primary_color);
}

.badge--secondary {
  background: var(--secondary_color);
}

.badge--small {
  font-size: 1.6rem;
}

@media screen and (min-width: 1024px) {
  .badge {
    font-size: 1.5rem;
  }

  .badge--small {
    font-size: 1.2rem;
  }
}

/* Lists */

.list {
  list-style: none;
  padding-left: 0;
  color: var(--heading_color);
}

/* In inline list we want to convert each eleemnt in inline elements */
.list--inline .list__item {
  display: inline-block;
  margin-right: 2rem;
}

.list--bullet {
  list-style-image: url("/data/icons/tick.svg");
  padding-left: 3rem;
}

/* Applying padding to the text after the bullet list image */
.list--bullet .list__item {
  padding-left: 0.5rem;
  margin-bottom: 1rem;
}

@media screen and (min-width: 1024px) {
  .list--bullet .list__item {
    padding-left: 0;
  }
}

/* Icons */

/* For icons i went to svgsprit.es to generate a sprite of all icons */
.icon {
  width: 40px;
  height: 40px;
}

/* To apply color to an SVG we use the 'fill' property */
.icon--primary {
  fill: var(--primary_color);
}

.icon_container {
  width: 64px;
  height: 64px;
  border-radius: 100%;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  background: #f3f9fa;
}
